@using System.Text.Json
@inject ITMatchingAppContext AppContext
@model ITMatching.ViewModels.ExpertClientMatchingViewModel
@{
    ViewData["Title"] = "Expert Offline Matching Room";
}



<div class="container">
    @if (Model.OfflineExpertIdsAndScores.Any())
    {
        @if (Model.OfflineExpertIdsAndScores[0] != (0, 0, 0))
        {
            var cnt = 0;
            <h1 class="mt-5 mb-3 text-center"><strong>No matching experts are currently available to help you</strong></h1>
            <br />

            <h3 class="mt-4 mb-5 text-center">Here are some offline matching experts who may be able to help you later.</h3>


            <div class="accordion" id="accordionReq">
                <div class="row no-gutters">


                    @foreach ((int, double, double) ex in Model.OfflineExpertIdsAndScores)
                    {
                        var serviceIds = AppContext.ExpertServices.Where(es => es.ExpertId == ex.Item1).Select(es => es.ServiceId);
                        var tags = AppContext.Services.Where(s => serviceIds.Contains(s.Id)).Select(s => s.ServiceName).ToList();

                        Expert tempExpert = AppContext.Experts.Where(e => e.Id == ex.Item1).FirstOrDefault();

                        string firstName = Model.Itmusers.Where(it => it.Id == tempExpert.ItmuserId).Select(it => it.FirstName).FirstOrDefault();
                        string lastName = Model.Itmusers.Where(it => it.Id == tempExpert.ItmuserId).Select(it => it.LastName).FirstOrDefault();

                        string fullName = firstName + " " + lastName;
                        string email = Model.Itmusers.Where(it => it.Id == tempExpert.ItmuserId).Select(it => it.Email).FirstOrDefault();

                        double matchingScore = ex.Item2 * 100;
                        double feedbackScore = ex.Item3 * 100;
                        matchingScore = Math.Round(matchingScore, 1);
                        feedbackScore = Math.Round(feedbackScore, 1);


                        <button class="border-0 btn-block mt-3 p-0@(cnt == 0 ? "" : " collapsed")" type="button" data-toggle="collapse" data-target="#collapse-@cnt" aria-expanded="@(cnt == 0 ? "true" : "false")" aria-controls="collapse-@cnt">
                            <div class="col-12 p-3 req-head-bg">
                                <div style="clear: both">
                                    <h3 style="float: left" class="mb-0 req-head-text font-weight-bold text-left ml-3">@fullName</h3>
                                    <h3 style="float: right" class="mb-0 req-head-text font-weight-bold text-right">Matching Score: @matchingScore</h3>
                                    <br />
                                </div>
                            </div>
                        </button>

                        <div id="collapse-@cnt" data-parent="#accordionReq" class="col-12 p-3 req-body-bg collapse@(cnt == 0 ? " show" : "")">
                            <div class="mb-3">
                                <h3 style="float: left" class="mb-0 req-head-text font-weight-bold text-left">Email: @email</h3>
                                <h3 style="float: right" class="mb-0 req-head-text font-weight-bold text-right">Client Satisfaction: @feedbackScore%</h3>

                            </div>

                            <div>
                                <div class="d-flex m-n3 flex-wrap col-12 p-3 req-body-bg">
                                    @foreach (var tag in tags)
                                    {
                                        <span class="badge badge-warning m-3 py-3 px-4 text-white">@tag</span>
                                    }
                                </div>
                            </div>
                            <div class="d-flex justify-content-center mt-3 flex-wrap">
                                <form asp-controller="SchedulerUtil" asp-action="ViewSchedule" asp-route-id="@tempExpert.Id" method="post">
                                    <input name="ExpertId" type="hidden" value="@tempExpert.Id" />

                                    <button type="submit" class="btn btn-warning text-white font-weight-bold py-2 px-4 mx-5" @Url.Action("ViewSchedule", "SchedulerUtil", new { ExpertId = tempExpert.Id })>View Expert Schedule</button>
                                </form>
                            </div>
                        </div>

                        cnt++;
                    }

                </div>
            </div>
        }

        else
        {
            <h1 class="mt-5 mb-5 text-center"><strong>Sorry, no registered experts have the ability to help you.</strong></h1><br />
            <h3 class="mt-5 mb-2 text-center">Did you make sure to properly tag your help request? You can edit and resubmit your help request from your account page.</h3>

            <div class="row justify-content-center">
                <a href='@Url.Action("Index", "Home")' class="text-decoration-none"><input type="button" class="btn btn-xlarge btn-secondary m-5" id="OrangeButton" value="Return to Home Page"></a>
            </div>
        }
    }
    else
    {
        <h1 class="mt-5 mb-5 text-center"><strong>No Help Request or Tags Detected</strong></h1><br />
        <h3 class="mt-5 mb-2 text-center">To get matched with an expert, create a new help request and tag it, or resubmit a previous one.</h3><br /><br />

        <div class="row justify-content-center">
            <a href='@Url.Action("RequestForm", "Matching")' class="text-decoration-none"><input type="button" class="btn btn-xlarge btn-secondary m-3" id="OrangeButton" value="Create New Help Request"></a>

            <a href='@Url.Action("Index", "Home")' class="text-decoration-none"><input type="button" class="btn btn-xlarge btn-secondary m-3" id="OrangeButton" value="Return to Home Page"></a>
        </div>
    }

</div>

@section Scripts {
    <script src="~/js/expert-waiting-room.js" asp-append-version="true"></script>
}