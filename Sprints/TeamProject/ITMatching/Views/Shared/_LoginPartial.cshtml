@using Microsoft.AspNetCore.Identity


@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ITMatchingAppContext AppContext

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        string id = UserManager.GetUserId(User);
        Itmuser itUser = AppContext.Itmusers.Where(u => u.AspNetUserId == id).FirstOrDefault();
        Expert eUser = AppContext.Experts.Where(eu => eu.ItmuserId == itUser.Id).FirstOrDefault();

        <li class="themeToggle">
            <button type="button" class="btn btn-dark" id="toggleButton">Toggle Light Mode</button>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" style="padding: 20px;" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@itUser.FirstName's Profile</a>
        </li>

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-white" id="logout">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="themeToggle">
            <button type="button" class="btn btn-orange" id="toggleButton">Toggle Light Mode</button>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" style="padding: 20px;" asp-area="Identity" asp-page="/Account/TempRegister">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" style="padding: 20px;" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
